<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>oppijanumerorekisteri</artifactId>
        <groupId>fi.vm.sade.oppijanumerorekisteri</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>oppijanumerorekisteri-domain</artifactId>

    <properties>
        <!-- Do not deploy this module to artifactory -->
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Generate querydsl metadata -->
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>${apt-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate schema.ddl from which .html/.png presentation of domain model can be generated later -->
            <plugin>
                <groupId>io.github.divinespear</groupId>
                <artifactId>jpa-schema-maven-plugin</artifactId>
                <version>${jpa-schema-maven-plugin.version}</version>
                <configuration>
                    <scriptAction>create</scriptAction>
                    <createOutputFileName>schema.ddl</createOutputFileName>
                    <databaseProductName>PostgreSQL</databaseProductName>

                    <databaseMajorVersion>9</databaseMajorVersion>
                    <databaseMinorVersion>3</databaseMinorVersion>
                    <format>true</format>
                    <lineSeparator>LF</lineSeparator>
                    <packageToScan>
                        <scan>fi.vm.sade.oppijanumerorekisteri.models</scan>
                    </packageToScan>
                    <vendor>hibernate</vendor>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.persistence</groupId>
                        <artifactId>org.eclipse.persistence.jpa</artifactId>
                        <version>${org.eclipse.persistence.jpa.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-entitymanager</artifactId>
                        <version>${hibernate.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- Generate db diagram from schema.ddl on Bamboo master branch builds -->
        <profile>
            <id>generate-db-diagram</id>
            <activation>
                <property>
                    <name>branch</name>
                    <value>master</value>
                </property>
            </activation>
            <properties>
                <schema.file>${project.basedir}/target/generated-schema/schema.ddl</schema.file>
                <dbdiagram.generator>/usr/sbin/sql2diagram</dbdiagram.generator>
                <dbdiagram.output>${project.basedir}/target/sql2diagram/</dbdiagram.output>
                <dbdiagram.filename>${project.artifactId}-${project.version}</dbdiagram.filename>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                                        <if>
                                            <available file="${schema.file}" />
                                            <then>
                                                <echo>Generate DB Diagrams fom file '${schema.file}'.</echo>
                                                <mkdir dir="${dbdiagram.output}" />

                                                <!-- generate diagrams -->
                                                <exec executable="${dbdiagram.generator}">
                                                    <arg value="${schema.file}" />
                                                    <arg value="${dbdiagram.output}/${dbdiagram.filename}" />
                                                </exec>

                                                <!-- copy diagrams with name *-LATEST.* -->
                                                <copy file="${dbdiagram.output}/${dbdiagram.filename}.html"
                                                      tofile="${dbdiagram.output}/${project.artifactId}-LATEST.html"/>

                                                <copy file="${dbdiagram.output}/${dbdiagram.filename}.png"
                                                      tofile="${dbdiagram.output}/${project.artifactId}-LATEST.png"/>

                                                <!-- SCP files to pulpetti apache -->
                                                <scp todir="bamboo@pulpetti:/var/www/html/db/" trust="true"
                                                     keyfile="${user.home}/.ssh/id_rsa" passphrase="">
                                                    <fileset dir="${dbdiagram.output}">
                                                        <include name="**/*" />
                                                    </fileset>
                                                </scp>
                                            </then>
                                            <else>
                                                <echo>Skip DBDiagramGenerator, because file '${schema.file}' not found.</echo>
                                            </else>
                                        </if>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant-jsch</artifactId>
                                <version>${ant-jsch.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>com.jcraft</groupId>
                                <artifactId>jsch</artifactId>
                                <version>${jsch.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>${ant-contrib.version}</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
